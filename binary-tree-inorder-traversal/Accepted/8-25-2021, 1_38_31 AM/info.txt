{"id":543614150,"lang":"cpp","time":"6Â months","timestamp":1629835711,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/543614150/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void inorder(vector<int> &ans,TreeNode* root)\n    {\n        if(root == NULL)\n            return;\n        \n        inorder(ans,root->left);\n        \n        ans.push_back(root->val);\n        \n        inorder(ans,root->right);\n    }\n    \n    vector<int> inorderTraversal(TreeNode* root) \n    {\n        \n        vector<int> ans;\n        \n        inorder(ans,root);\n            \n        return ans;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}