{"id":522541427,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1626283433,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/522541427/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int height(TreeNode* root)\n    {\n        if(root == NULL)\n            return 0;\n        \n        return 1+max(height(root->left),height(root->right));\n    }\n    \n    pair<int,int> get(TreeNode* root)\n    {\n        if(root == NULL)\n        {\n            pair<int,int> p;\n            p.first = 0;\n            p.second = 0;\n            return p;\n        }\n        \n        pair<int,int> leftAns = get(root->left);\n        pair<int,int> rightAns = get(root->right);\n        \n        int lh = leftAns.first;\n        int ld = leftAns.second;\n        int rh = rightAns.first;\n        int rd = rightAns.second;\n        \n        int height = 1+max(lh,rh);\n        int diameter = max(lh+rh,max(ld,rd));\n        pair<int,int>p;\n        p.first = height;\n        p.second = diameter;\n        return p;\n    }\n    \n    int diameterOfBinaryTree(TreeNode* root) \n    {\n        pair<int,int> p = get(root);\n        return p.second; \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}