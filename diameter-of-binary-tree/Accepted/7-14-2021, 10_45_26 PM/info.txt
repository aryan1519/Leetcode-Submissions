{"id":522537784,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1626282926,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/522537784/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int height(TreeNode* root)\n    {\n        if(root == NULL)\n            return 0;\n        \n        return 1+max(height(root->left),height(root->right));\n    }\n    \n    int diameterOfBinaryTree(TreeNode* root) \n    {\n            \n        if(root==NULL)\n            return 0;\n        \n        int lh_rh = height(root->left)+height(root->right);\n        \n        int lh = diameterOfBinaryTree(root->left);\n        \n        int rh = diameterOfBinaryTree(root->right);\n        \n        return max(lh_rh,max(lh,rh));\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}