{"id":543607247,"lang":"cpp","time":"6Â months","timestamp":1629834637,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/543607247/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n     \n        \n        if(root == NULL)\n            return NULL;\n        \n        TreeNode* left = invertTree(root->left);\n        \n        TreeNode* right = invertTree(root->right);\n        \n        root->left = right;\n        \n        root->right = left;\n        \n        return root;\n//         TreeNode *temp = root->left;\n        \n//         root->left = root->right;\n        \n//         root->right = root->left;\n        \n        \n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}